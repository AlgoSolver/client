name: Build and Deploy (CI/CD)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    name: Build-linux
    runs-on: ubuntu-latest
#   build1:
#     name: Build-Windows
#     runs-on: windows-latest
#   build2:
#     name: Build-Mac
#     runs-on: macos-latest
  
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Restore node_modules from cache
      uses: actions/cache@v2
      with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Build Production
      run: npm run build
      env:
         CI: false

#     - name: Run the tests and generate coverage report
#       run: npm test -- --coverage

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v1
#       with:
#         token: ${{secrets.CODECOV_TOKEN}}
#         vflags: unittest
#         name: codecov-report

    #- name: Eject
      #id: npm eject

  # deploy:
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Repo
  #     uses: actions/checkout@master

  #   - name: Deploy to Firebase
  #     run: |
  #       sudo npm install -g firebase-tools
  #       firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
