[{"/home/semo/github/AlgoSolver/client/src/index.js":"1","/home/semo/github/AlgoSolver/client/src/App.js":"2","/home/semo/github/AlgoSolver/client/src/reportWebVitals.js":"3","/home/semo/github/AlgoSolver/client/src/GlobalStyle.js":"4","/home/semo/github/AlgoSolver/client/src/shared/hooks/useDarkMode.jsx":"5","/home/semo/github/AlgoSolver/client/src/pages/elements/index.jsx":"6","/home/semo/github/AlgoSolver/client/src/components/button/index.jsx":"7","/home/semo/github/AlgoSolver/client/src/components/navbar/index.jsx":"8","/home/semo/github/AlgoSolver/client/src/pages/home/index.jsx":"9","/home/semo/github/AlgoSolver/client/src/pages/login/index.jsx":"10","/home/semo/github/AlgoSolver/client/src/pages/blog/index.jsx":"11","/home/semo/github/AlgoSolver/client/src/pages/signup/index.jsx":"12","/home/semo/github/AlgoSolver/client/src/pages/new-post/index.jsx":"13","/home/semo/github/AlgoSolver/client/src/elements/icons/index.jsx":"14","/home/semo/github/AlgoSolver/client/src/elements/colors/index.jsx":"15","/home/semo/github/AlgoSolver/client/src/elements/elevation/index.jsx":"16","/home/semo/github/AlgoSolver/client/src/shared/libs/error-messages.js":"17","/home/semo/github/AlgoSolver/client/src/components/Text/index.jsx":"18","/home/semo/github/AlgoSolver/client/src/components/form/index.jsx":"19","/home/semo/github/AlgoSolver/client/src/components/blog/index.jsx":"20","/home/semo/github/AlgoSolver/client/src/components/gate/index.jsx":"21","/home/semo/github/AlgoSolver/client/src/elements/typography/index.jsx":"22","/home/semo/github/AlgoSolver/client/src/elements/buttons/index.jsx":"23","/home/semo/github/AlgoSolver/client/src/elements/form/index.jsx":"24","/home/semo/github/AlgoSolver/client/src/assets/icons/index.jsx":"25","/home/semo/github/AlgoSolver/client/src/components/divider/index.jsx":"26"},{"size":610,"mtime":1610762691857,"results":"27","hashOfConfig":"28"},{"size":4612,"mtime":1610845490725,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610314692248,"results":"30","hashOfConfig":"28"},{"size":1052,"mtime":1610845490725,"results":"31","hashOfConfig":"28"},{"size":651,"mtime":1610314692248,"results":"32","hashOfConfig":"28"},{"size":2711,"mtime":1610845490725,"results":"33","hashOfConfig":"28"},{"size":5009,"mtime":1610845490725,"results":"34","hashOfConfig":"28"},{"size":3648,"mtime":1610845490725,"results":"35","hashOfConfig":"28"},{"size":2178,"mtime":1610762691857,"results":"36","hashOfConfig":"28"},{"size":2015,"mtime":1610845490725,"results":"37","hashOfConfig":"28"},{"size":2007,"mtime":1610898860158,"results":"38","hashOfConfig":"28"},{"size":1198,"mtime":1610845490725,"results":"39","hashOfConfig":"28"},{"size":79,"mtime":1610762691857,"results":"40","hashOfConfig":"28"},{"size":3214,"mtime":1610845490725,"results":"41","hashOfConfig":"28"},{"size":1816,"mtime":1610845490725,"results":"42","hashOfConfig":"28"},{"size":932,"mtime":1610762691857,"results":"43","hashOfConfig":"28"},{"size":2138,"mtime":1610762691857,"results":"44","hashOfConfig":"28"},{"size":1900,"mtime":1610845490725,"results":"45","hashOfConfig":"28"},{"size":7391,"mtime":1610845490725,"results":"46","hashOfConfig":"28"},{"size":2355,"mtime":1610900230777,"results":"47","hashOfConfig":"28"},{"size":274,"mtime":1610762691857,"results":"48","hashOfConfig":"28"},{"size":1341,"mtime":1610845490725,"results":"49","hashOfConfig":"28"},{"size":2765,"mtime":1610845490725,"results":"50","hashOfConfig":"28"},{"size":673,"mtime":1610845490725,"results":"51","hashOfConfig":"28"},{"size":12619,"mtime":1610762691857,"results":"52","hashOfConfig":"28"},{"size":211,"mtime":1610762691857,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1fb38s3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/semo/github/AlgoSolver/client/src/index.js",[],["118","119"],"/home/semo/github/AlgoSolver/client/src/App.js",["120","121","122","123"],"// export { default as App } from './app';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport { useDarkMode } from \"./shared/hooks/useDarkMode\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Elements from './pages/elements/';\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport Blog from \"./pages/blog\";\nimport NewPost from \"./pages/new-post\";\n\nimport Button from \"./components/button/\";\nimport Navbar from \"./components/navbar/\";\n\n\nexport const theme ={\n  colors:{\n  primary:['#3568d4','#3e7bfa','#6698fa','#ccddff'],\n  dark:['#1c1c28','#28293d','#555770','#8f90a6','#c7c9d9'],\n  light:['#e4e4eb','#ebebf0','#f3f2f5','#fafafc','#ffffff'],\n  red:['#e53535','#ff3b3b','#ff5c5c','#ff8080','#ffe5e5'],\n  green:['#05a660','#06c270','#39d9ba','#57EBA1','#E3FFF1'],\n  blue:['#004FC4','#0063F7','#5B8DEF','#9DBFF9','#E5F0FF'],\n  yellow:['#E5B800','#FFCC00','#FDDD48','#FDED72','#FFFEE5'],\n  orange:['#E507A0','#FF8800','#FDAC42','#FCCC75','#FFF8E5'],\n  teal:['#00B7C4','#00CFDE','#73DFE7','#A9EFF2','#E5FFFF'],\n  purple:['#4D0099','#6600CC','#AC5DD9','#DDA5E9','#FFE5FF'] \n},\n  gradients:[\n  'linear-gradient(147.14deg, #5B8DEF 6.95%, #0063F7 93.05%)',\n  'linear-gradient(147.14deg, #FF8800 6.95%, #E63535 93.05%)',\n  'linear-gradient(147.14deg, #3E7BFA 6.95%, #6600CC 93.05%)',\n  'linear-gradient(147.14deg, #00CFDE 6.95%, #05A660 93.05%)',\n  'linear-gradient(145.51deg, #FDDD48 7.21%, #00B7C4 94.47%)',\n  'linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)',\n  'linear-gradient(147.14deg, #73DFE7 6.95%, #0063F7 93.05%)',\n  'linear-gradient(145.51deg, #AC5DD9 7.21%, #004FC4 94.47%)'\n  ],\n  elevation:[\n  {\n    shadow:'inset 0px 0.5px 4px rgba(96, 97, 112, 0.32)',\n    desc:'-01 (inset) Focused input forms',\n  },\n  {\n    shadow:'none',\n    desc:'00 (Base) Background, Alerts, Button disabled, Input Forms disabled '\n  },\n  {\n    shadow:'0px 0px 1px rgba(40, 41, 61, 0.08), 0px 0.5px 2px rgba(96, 97, 112, 0.16)',\n    desc:'01 Card, Pressed button, Progressive button'\n  },\n  {\n    shadow:'0px 0px 1px rgba(40, 41, 61, 0.04), 0px 2px 4px rgba(96, 97, 112, 0.16)',\n    desc:'02 Button, Notification badges'\n  },\n  {\n    shadow:' 0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16)',\n    desc:'03 Navigation Menu, Bar'\n  },\n   {\n    shadow:'0px 2px 4px rgba(40, 41, 61, 0.04), 0px 8px 16px rgba(96, 97, 112, 0.16)',\n    desc:'04 Card Raised, Button Raised, Dropdown Menu'\n  },\n   {\n    shadow:'0px 2px 8px rgba(40, 41, 61, 0.04), 0px 16px 24px rgba(96, 97, 112, 0.16)',\n    desc:'05 Picker, Popover'\n  },\n  {\n    shadow:'0px 2px 8px rgba(40, 41, 61, 0.08), 0px 20px 32px rgba(96, 97, 112, 0.24)',\n    desc:'06 Modals, Dialogue'\n  },\n  ]\n}\n\n\n\nconst light = {\n  primary: \"#005FF9\",\n  secondary: \"#A5F469\",\n  secondary2: \"#f7be4e\",\n  bg: \" #E7E7E9\",\n  bg2: \"#FFFFFF\",\n  bg3: \"#CBCBCD\",\n  text: \"#19191A\",\n  text2: \"#393e46\",\n  text3: \"#657884\",\n  blur: \"blur(15px) saturate(180%)\",\n  shadow:\n    \"0px 60px 80px rgba(15, 15, 15, 0.08), 0px 25.0666px 33.4221px rgba(15, 15, 15, 0.0575083), 0px 13.4018px 17.869px rgba(15, 15, 15, 0.0476886), 0px 7.51293px 10.0172px rgba(15, 15, 15, 0.04), 0px 3.99006px 5.32008px rgba(15, 15, 15, 0.0323114), 0px 1.66035px 2.21381px rgba(15, 15, 15, 0.0224916)\",\n  shadowHover:\n    \"0px 60px 80px rgba(15, 15, 15, 0.1), 0px 25.0666px 33.4221px rgba(15, 15, 15, 0.0775), 0px 13.4018px 17.869px rgba(15, 15, 15, 0.0277), 0px 7.51293px 10.0172px rgba(15, 15, 15, 0.06), 0px 3.99006px 5.32008px rgba(15, 15, 15, 0.0523), 0px 1.66035px 2.21381px rgba(15, 15, 15, 0.0425)\",\n};\nconst dark = {\n  bg: \"#333\",\n  text: \"#fff\",\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  max-width: 100%;\n  min-width: 375px;\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router>\n        <Navbar />\n        <Wrapper className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route  path=\"/login\">\n              <Login />\n            </Route>\n            <Route  path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/blog\">\n              <Blog />\n            </Route>\n             <Route path=\"/new-post\">\n              <NewPost />\n            </Route>\n            <Route path=\"/elements\">\n              <Elements />\n            </Route>\n          </Switch>\n        </Wrapper>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/semo/github/AlgoSolver/client/src/reportWebVitals.js",[],"/home/semo/github/AlgoSolver/client/src/GlobalStyle.js",[],"/home/semo/github/AlgoSolver/client/src/shared/hooks/useDarkMode.jsx",["124"],"import {useEffect,useState,useRef,useCallback} from 'react';\n\nconst getCurrentTheme = ()=>{\n\tconst currentTheme = localStorage.getItem('algosolver-theme');\n    console.log(currentTheme)\n\treturn currentTheme ? currentTheme : 'light';\n}\n\n\n\n// i will use redux after that;\n\nexport const useDarkMode = ()=> {\n\tconst [theme,setTheme] = useState(()=>getCurrentTheme());\n    const isMounted = useRef(false);\n    \n    const toggleTheme = (currentTheme) =>{\n    \tsetTheme(currentTheme);\n\t}\n\n\tuseEffect(()=>{\n\t\tif(isMounted.current){\n\t\tlocalStorage.setItem('algosolver-theme',theme);\n\t\t}\n\t\tisMounted.current = true;\n\t},[theme]);\n\n\treturn [theme,toggleTheme]; \n}","/home/semo/github/AlgoSolver/client/src/pages/elements/index.jsx",["125"],"import {BrowserRouter as Router , Route , Switch ,Link , useLocation} from 'react-router-dom';\nimport styled from 'styled-components';\nimport Icons from '../../elements/icons/'\nimport Elevation from '../../elements/elevation/'\nimport Colors from '../../elements/colors/'\nimport Buttons from '../../elements/buttons'\nimport Typography from '../../elements/typography'\nimport Forms from '../../elements/form'\n\nconst PageContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 120rem;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\nconst ElementsSidebar = styled.div`\n\tflex:0 1 30rem;\n\tmargin: 1rem 0 0;\n\theight: calc(100vh - 7.4rem);\n\toverflow-y:auto;\n\tpadding:2rem;\n\tborder-right:2px solid #ddd;\n\t.sidebar{\n\t\twidth:100%;\n\t\t&__menu{\n\t\t\tlist-style-type: none;\n\t\t}\n\t\t&__item{\n\t\t\tmargin:.8rem;\n\t\t}\n\t\t&__link{\n\t\t\tcolor:${({theme})=>theme.text};\n\t\t\tborder-radius: .5rem;\n\t\t\theight:3.2rem;\n\t\t\tpadding-left:.8rem;\n\t\t\tpadding-right: .8rem;\n\t\t\ttransition: background-color 0.2s ease, color 0.2s ease;\n\t\t\tfont-size:1.4rem;\n\t\t\tfont-weight: 600;\n\t\t\ttext-transform: capitalize;\n\t\t\tfont-family: 'Avenir';\n\t\t\tmargin:0 .4rem;\n\t\t    display: flex;\n\t\t    justify-content:center;\n\t\t    align-items: center;\n\t\t    &:hover{\n\t\t    \tbackground:${({theme})=>theme.bg2};\n\t\t    };\n\t\t    &.active{\n\t\t    \tbackground:${({theme})=>theme.bg2} !important;\n\t\t    }\n\t\t}\n\t}\n`\nconst ElementsBody = styled.div`\n\tflex:1;\n`\n\nconst LinkItem = ({name,active})=>{\n\treturn <li className=\"sidebar__item\">\n\t   \t\t<Link to={`/elements/${name}`} className={` sidebar__link ${active===name ? 'active':''}`}>{name}</Link>\n\t   \t</li>\n}\nconst Sidebar = ()=>{\n\tconst {pathname} =useLocation();\n\tconst active = pathname.split('/')[2];\n\tconsole.log(active)\n\treturn <ElementsSidebar>\n\t   <div className=\"sidebar\">\n\t   \t<ul className=\"sidebar__menu\">\n\t     \t<LinkItem name=\"colors\" active={active}/>\n\t   \t\t<LinkItem name=\"icons\" active={active}/>\n\t   \t\t<LinkItem name=\"elevation\" active={active}/>\n\t   \t\t<LinkItem name=\"buttons\" active={active}/>\n\t   \t\t<LinkItem name=\"typography\" active={active}/>\n\t   \t    <LinkItem name=\"forms\" active={active}/>\n\t   \t</ul>\n\t   </div>\n\t </ElementsSidebar>\n}\nconst Elements = ()=>{\n\treturn <PageContainer>\n\t<Router>\n\t  <>\n\t <Sidebar />\n\t <ElementsBody>\n\t  <Route path=\"/elements/colors\">\n\t   <Colors />\n\t  </Route>\n\t  <Route path=\"/elements/icons\">\n\t   <Icons />\n\t  </Route>\n\t  <Route path=\"/elements/buttons\">\n\t   <Buttons />\n\t  </Route>\n\t  <Route path=\"/elements/elevation\">\n\t   <Elevation />\n\t  </Route>\n\t  <Route path=\"/elements/typography\">\n\t   <Typography />\n\t  </Route>\n\t  <Route path=\"/elements/forms\">\n\t   <Forms />\n\t  </Route>\n\t </ElementsBody>\n\t  </>\n\t </Router>\n\t</PageContainer>\n} \n\nexport default Elements","/home/semo/github/AlgoSolver/client/src/components/button/index.jsx",["126"],"import styled,{keyframes} from 'styled-components';\nimport classNames from \"classnames\";\n\nconst types = ['primary', 'green', 'purple', 'teal', 'red','dark','blue']\n\nconst StyledButton = styled.button `\n    \n    font-size: 1.6rem;\n    line-height: 1.6;\n    background: ${({theme,type})=>theme.colors[type][1]};\n    color: #fff;\n    border-radius: .6rem;\n    padding: 0 1.6rem 0;\n    height:3.8rem;\n    min-width:8rem;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 500;\n    box-shadow:${({theme})=>theme.elevation[3].shadow};\n    transition: all 200ms ease-in-out;\n    font-family: 'Avenir';\n    letter-spacing: 0.02rem;\n    border: 2px solid ${(props)=>props.theme.colors[props.type][1]};\n    &.big{\n        height: 4.8rem;\n    }\n    .icon{\n      margin-right: 1rem;\n      display: flex;\n    align-items: center;\n    justify-content: center;\n\n    }\n    &.small{\n      height:3.2rem;\n      font-size:1.4rem;\n      font-family:'Avenir';\n    }\n    &.contained{\n         color:${({theme,type})=>types.some((item)=>type===item) ? theme.colors.light[4] : theme.colors.dark[0] };\n         &:hover{\n           background: ${({theme,type})=>theme.colors[type][2]};\n           border-color:  ${({theme,type})=>theme.colors[type][2]};\n         }\n        \n         &:active{\n           background: ${({theme,type})=>theme.colors[type][0]};\n           border-color:  ${({theme,type})=>theme.colors[type][0]};\n           box-shadow:${({theme})=>theme.elevation[2].shadow};\n         }\n          &:focus{\n           border-color:  ${({theme,type})=>theme.colors[type][4] || theme.colors[type][3]};\n           border-radius: .7rem;\n         }\n         .icon{\n           svg{\n      path{\n        stroke:${({theme,type})=>types.some((item)=>type===item) ? theme.colors.light[4] : theme.colors.dark[0] };\n      }\n    }\n         }\n    }\n    &.outlined{\n       background:transparent;\n       color:${({theme,type})=>theme.colors[type][1]};\n       border-color:  ${({theme,type})=>theme.colors[type][3]};\n       &:hover{\n           background: ${({theme,type})=>theme.colors[type][3]};\n           border-color:  ${({theme,type})=>theme.colors[type][3]};\n         }\n        \n         &:active{\n           background: ${({theme,type})=>theme.colors[type][4 ]};\n           border-color:  ${({theme,type})=>theme.colors[type][2]};\n           box-shadow:${({theme})=>theme.elevation[2].shadow};\n         }\n          &:focus{\n           border-color:  ${({theme,type})=>theme.colors[type][0]};\n           border-radius: .7rem;\n         }\n\n        .icon{\n           svg{\n      path{\n        stroke:${({theme,type})=>theme.colors[type][1]};\n      }\n    }\n         }\n    }\n    &.link{\n       background:transparent;\n       border:0;\n       text-decoration: underline;\n       display: inline;\n       color:${({color,theme})=>color ? color : theme.colors.blue[1]};\n       box-shadow: none;\n       padding:0;\n       font-size:1.2rem;\n       &:hover{\n        text-decoration: none;\n       }\n\n    }\n    &.squared{\n      border-radius: 0;\n    }\n    &.block{\n      display: block;\n      width:100%;\n    }\n    &.disabled{\n      background: ${({theme,type})=>theme.colors.light[0]} !important;\n      color:${({theme,type})=>theme.colors.dark[4]} !important;\n      box-shadow: none;\n      border-color: ${({theme,type})=>theme.colors.light[0]} !important;\n      cursor: not-allowed !important;\n    }\n    &.loading{\n        background: ${({theme,type})=>theme.colors.light[0]} !important;\n        border-color: ${({theme,type})=>theme.colors.light[0]} !important;\n        cursor: normal !important;\n    }\n}\n`\n\nconst donutSpin = keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n`\n\nconst LoadingState = styled.span`\n  display: inline-block;\n    border: 4px solid ${({theme,type})=>theme.colors.dark[4]};;\n    border-left-color: ${({theme,type})=>theme.colors.dark[1]};\n    border-radius: 50%;\n    width: 24px;\n    height: 24px;\n    animation: ${donutSpin} .8s linear infinite;\n`\nconst Button = ({\n    children,\n    disabled,\n    big,\n    theme = \"primary\",\n    block,\n    outlined,\n    link,\n    squared,\n    circle,\n    style = {},\n    className,\n    loading,\n    small,\n    icon=null,\n    scale = true,\n    iconSize='2.4rem',\n    iconFill='#1c1c28'\n}) => {\n    const classes = classNames(\n        className,\n        `${outlined ? \"outlined\":link ? \"link\" : \"contained\"}`,\n        big && \"big\",\n        small && \"small\",\n        squared && \"squared\",\n        block && \"block\",\n        circle && \"circle\",\n        loading && \"loading\",\n        scale && 'scaling',\n        disabled && 'disabled'\n    );\n\n    return <StyledButton\n  style={style}\n  className={classes}\n  type={theme}\n  disabled={disabled || loading}\n  >\n    {icon && <span className=\"icon\" >{icon({iconSize,iconSize})}</span>}\n\n  <span className=\"center\"> {!loading  ? children : <LoadingState type={theme}/>} </span> \n  </StyledButton>\n}\nexport default Button;","/home/semo/github/AlgoSolver/client/src/components/navbar/index.jsx",["127","128","129","130","131","132"],"import styled from 'styled-components';\nimport Button from '../button'\nimport {Link,useLocation} from 'react-router-dom';\nconst StyledNavbar = styled.div`\n    &.navnormal{\n    \t.nav__container{\n\t\t\tbox-shadow: ${({ theme }) => theme.elevation[4].shadow};\n\t\t\tbackground:${({ theme }) => theme.colors.light[4]};\n\t\t\twidth:100%;\n            .nav__body{\n\t\t     display: flex;\n\t\t     width: 100%;\n\t\t      max-width: 111.8rem;\n\t\t      margin: 0 auto;\n\t          }\n\t\t}\n\t}\n    &.floatnav{\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 999;\n    margin-top:2rem;\n\tpadding: 0rem 8rem;\n\t.nav__container{\n\t\t\tborder-radius: .9rem;\n\t\t\tbox-shadow: 0 1.5rem 2rem -0.5rem rgba(0,0,0,0.07), 0 0.25rem 2rem 0 rgba(0,0,0,0.03);\n\t\t\tbackground:${({theme})=>theme.bg2};\t\t\n\t\t    max-width: 117rem;\n\t\t\tmargin: 0 auto;\n\t\t}\n\t\t.nav__body{\n\t     display: flex;\n\t     width: 100%;\n\t}\n    }\n\t.nav__brand{\n\t\theight: 6.4rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ta{\n\t\t\tpadding:0 2rem;\n\t\t\tspan{\n\t\t\t\tdisplay:inline-block;\n\t\t\t\tmargin-right:8rem;\n                font-family: 'Avenir';\n                font-weight: 700;\n                font-size:2.5rem;\n\t\t\t}\n\t\t}\n\n\t\t\n\t}\n    .menu{\n\t\tdisplay:flex;\n\t\tflex:1;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tlist-style-type: none;\n\t\t&__links{\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tflex:1;\n\t\t\tjustify-content: center;\n\t\t   \n\n\t\t\t\n\t\t}\n\t\t&__link{\n\t\t\tcolor:${({theme})=>theme.text};\n\t\t\tborder-radius: .5rem;\n\t\t\theight:3.2rem;\n\t\t\tpadding-left:1.6rem;\n\t\t\tpadding-right: 1.6rem;\n\t\t\ttransition: background-color 0.2s ease, color 0.2s ease;\n\t\t\tfont-size:1.4rem;\n\t\t\tfont-weight: 600;\n\t\t\ttext-transform: capitalize;\n\t\t\tfont-family: 'Avenir';\n\t\t\tmargin:0 .4rem;\n\t\t    display: flex;\n\t\t    justify-content:center;\n\t\t    align-items: center;\n\t\t    &:hover{\n\t\t    \tbackground:${({theme})=>theme.bg};\n\t\t    };\n\t\t}\n\t\t&__buttons{\n          display: flex;\n          align-items: center;\n          margin-right:2rem;\n         .login{\n             margin-right:1.6rem;\n          }\n\t\t}\n\t}\n\t\n`\n\nconst Navbar = () =>{\n\tconst location = useLocation();\n\tconsole.log(location);\n\treturn <StyledNavbar className={`nav ${location.pathname === '/' ? \"floatnav\" :'navnormal'}`}>\n\t\t<div className=\"nav__container\">\n\t\t\t<nav className=\"nav__body\">\n              <div className=\"nav__brand\">\n                 <a href=\"\"><span>AlgoSolver</span></a>\n              </div>\n              <ul className=\"menu\">\n              \t<div className=\"menu__links\">\n\t              \t    <li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Explore</a></li>\t\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Playground</a></li>\n\t      \t  \t\t\t<Link to=\"/blog\"><li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Blog</a></li></Link>\t\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Abouts us</a></li>\t\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Contact</a></li>\t\t\n              \t</div>\n              \t<div className=\"menu__buttons\">\n                    <li className=\"menu__item login\">\n\t                    <Link to=\"/login\">\n\t\t                    <Button small>\n\t\t                       Log in\n\t\t                    </Button>\n\t\t                </Link>\n                    </li>\t\n                    <li className=\"menu__item\">\n                        <Link to=\"/signup\">\n\t\t                    <Button outlined small>\n\t\t                       Sign in\n\t\t                    </Button>\n\t\t                </Link>\n                    </li>\t\n              \t</div>\n              </ul>\n\t\t\t</nav>\n\t\t</div>\n\t</StyledNavbar>\n}\nexport default Navbar;","/home/semo/github/AlgoSolver/client/src/pages/home/index.jsx",["133","134"],"import styled from 'styled-components';\nimport hero from '../../assets/images/hero.svg';\nimport code from '../../assets/images/code2.png';\nimport Button from '../../components/button/';\nconst HeroSection = styled.section`\n\tbackground-color:${(props)=>props.theme.bg2};\n    padding: 18rem 0 14rem;\n    &::before{\n    \tcontent: '';\n\t    display: block;\n\t    width: 3500px;\n\t    height: 1000px;\n\t    background:${(props)=>props.theme.bg2} url(${hero}) 50% 100% no-repeat;\n\t    background-size: cover;\n\t    position: absolute;\n\t    top: 0;\n\t    left: 50%;\n\t    transform: translateX(-50%);\n    }\n    .container{\n    \tposition: relative;\n    \tz-index: 10;\n    \twidth: 100%;\n\t    max-width: 1130px;\n\t    padding: 0 20px;\n\t    margin: 0 auto;\n\t    &__row{\n\t    \tdisplay: flex;\n\t    \talign-items: center;\n\t    \tjustify-content: center;\n\t    \t.intro{\n\t    \t\twidth:60rem; \n\t    \t\ttext-align: center;\n\t    \t\t&__title{\n\t    \t\t\tcolor:${({theme})=>theme.bg2};\n\t    \t\t\tfont-weight: 700;\n\t    \t\t\tfont-size:5rem;\n\t    \t\t\tfont-family: 'Avenir-Bold';\n\t    \t\t\tmargin-bottom: 3rem;\n\t    \t\t\tspan{\n\t    \t\t\t\tfont-weight: bold;\n\t    \t\t\t\tcolor:${({theme})=>theme.primary};\n\t    \t\t\t}\n\t    \t\t}\n\t    \t\t&__subtitle{\n\t    \t\t\tcolor:${(props)=>props.theme.bg};\n\t    \t\t\tfont-size:1.5rem;\n\t    \t\t\tfont-weight: 300;\n\t    \t\t\tline-height: 2;\n\t    \t\t\tletter-spacing: .03rem;\n\t    \t\t\ttext-transform: capitalize;\n\t    \t\t\tfont-family: 'Avenir';\n\t    \t\t\tmargin-bottom:2rem;\n\n\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n`\n\nconst Img = styled.img`\n\twidth: 3500px;\n\t    height: 1000px;\n`\n\n\nconst Hero = ()=>{\n\treturn <HeroSection>\n\t<div className=\"container\">\n\t   <div className=\"container__row\">\n\t        <div className=\"intro\">\n\t        \t<h1 className=\"intro__title\">\n\t        \t\tLeverage Your <span>\n\t        \t\tComputer Programming\n\t        \t\t</span> Skills\n\t        \t</h1>\n\t        \t<p className=\"intro__subtitle\">\n\t               Algo solver was designed to help you to get sharp\n\t               with algoritm, data structures, pattern techniques and more. \n\t        \t</p>\n\t        \t<Button big block>\n\t        \t   Make An Account\n\t        \t</Button>\n\t        </div>\n       </div>\n    </div>  \n\t</HeroSection>\n}\n\nexport default Hero;","/home/semo/github/AlgoSolver/client/src/pages/login/index.jsx",["135"],"import Text from \"../../components/Text/\";\nimport styled from \"styled-components\";\nimport { Form, TextInput, CheckBox, Divider } from \"../../components/form/\";\nimport Button from \"../../components/button/\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { checkErrors } from \"../../shared/libs/error-messages\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1118px;\n  margin: 0 auto;\n`;\nconst LoginForm = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (e) => console.log(e);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <TextInput\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"E-mail Address\"\n        register={register({\n          required: true,\n          pattern: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/i,\n        })}\n        error={checkErrors(\"email\", errors)}\n      />\n      <TextInput\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        register={register({ required: true, minLength: 6, maxLength: 32 })}\n        error={checkErrors(\"password\", errors)}\n      />\n      <CheckBox />\n      <Button block>Login</Button>\n    </form>\n  );\n};\nconst Login = () => {\n  return (\n    <Wrapper>\n      <Form>\n        <Text\n          style={{\n            lineHeight: 1.3,\n          }}\n          mg=\"0 0 1rem 0\"\n          type=\"h2\"\n          size=\"2.5rem\"\n          family=\"Linotte\"\n          bold\n        >\n          Login To Your Account\n        </Text>\n        <LoginForm />\n        <div\n          style={{\n            margin: \"1rem 0\",\n            alignItems: \"center\",\n            display:'flex',\n            justifyContent:'space-between',\n          }}\n        >\n          <Button link >\n            Forgot your password?\n          </Button>\n          <Button link>\n            Don't have an account\n          </Button>\n          </div>\n          <Divider />\n          <Button>Login with Google</Button>\n        \n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n","/home/semo/github/AlgoSolver/client/src/pages/blog/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/pages/signup/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/pages/new-post/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/elements/icons/index.jsx",["136","137"],"import styled from \"styled-components\";\nimport * as Vectors from \"../../assets/icons\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { TextInput } from \"../../components/form\";\n\nimport { Search } from \"../../assets/icons\";\nconst IconContainer = styled.div`\n  .icons {\n    margin: 0;\n    height: 100%;\n    &__wrapper {\n      max-width: 100%;\n      padding: 2rem;\n    }\n    &__search {\n      margin-top: 2rem;\n      box-shadow: ${({theme})=>theme.shadow2};\n      padding:2rem;\n      text-align: center;\n      background:#fff;\n      border-radius: 10px;\n    }\n    &__svg {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      align-items: center;\n      &--icon {\n      \tmax-width: calc(100% / 4 - 2rem);\n        flex: calc(100% / 3 - 4rem);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        margin: 1rem;\n        background:#fff;\n        border-radius: 10px;\n        padding: 2rem;\n        box-shadow: ${({theme})=>theme.shadow2};\n        transition: all 0.3s;\n\n        &:hover {\n          transform: translateY(-2px);\n        }\n        h1 {\n          &::selection {\n            background: red;\n            color: #fff;\n          }\n          font-size: 1.6rem;\n          margin: 2rem 0;\n        }\n      }\n      svg {\n        width: 3rem;\n        height: 3rem;\n      }\n    }\n  }\n`;\nconst Icons = () => {\n  const inputRef = useRef(null);\n  const [keyword, setKeyword] = useState(\"\");\n  const [searchedIcons, setSearchedIcons] = useState([]);\n  const [icons, setIcons] = useState([\n    ...Object.keys(Vectors).map((key) => {\n      return { name: key, svg: Vectors[key] };\n    }),\n  ]);\n  useEffect(() => {\n    setIcons((X) =>\n      X.sort((a, b) => {\n        let textA = a.name.toUpperCase();\n        let textB = b.name.toUpperCase();\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\n      })\n    );\n    setSearchedIcons(searchedIcons);\n  }, []);\n  useEffect(() => {\n    if(! (inputRef?.current))return;\n    const timer = setTimeout(() => {\n      if (keyword === inputRef.current.value) {\n        setSearchedIcons(\n          icons.filter((item) =>\n            item.name.toUpperCase().includes(keyword.toUpperCase())\n          )\n        );\n      }\n          }, 400);\n  \n\n    return () => clearTimeout(timer);\n  }, [keyword]);\n  return (\n    <IconContainer>\n      <div className=\"icons\">\n        <div className=\"icons__wrapper\">\n          <div className=\"icons__search\">\n            <div className=\"form__unit\">\n              <TextInput\n                type=\"text\"\n                id=\"iconed\"\n                register={inputRef}\n                icon={Search}\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n                className=\"form__input iconed\"\n              />\n            </div>\n          </div>\n\n          <div className=\"icons__svg\">\n            {searchedIcons.map((item) => (\n              <div className=\"icons__svg--icon\">\n                {item.svg(\"ahmed\")}\n                <h1>{item.name}</h1>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </IconContainer>\n  );\n};\nexport default Icons;\n","/home/semo/github/AlgoSolver/client/src/elements/colors/index.jsx",["138"],"import styled from 'styled-components';\nimport {theme} from '../../App.js';\nimport Text from '../../components/Text/';\nimport {useEffect} from 'react';\nconst \t ColorsContainer= styled.div`\n\tpadding:2rem;\n\t.plate{\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t}\n\t.cont{\n\t\tpadding: 2rem;\n\t\tbackground:#fff;\n\t\tborder-radius: 20px;\n\t\tmargin:2rem 0;\n\t}\n`\n\nconst ColorPlate = styled.div`\n\t.bg{\n\t\tpadding:4rem;\n\t    border-radius: 2rem;\n\t\tbackground:${({color,gradient})=>gradient ? gradient : color};\n\t}\n    \tmargin-right:2rem;\n`\n\nconst Colors = ()=>{\n\tconst renderPlate=(name)=>{\n\t\tif(name === 'gradient'){\n\t\t\treturn <div className=\"cont\">\n\t\t  <Text type=\"h3\" transform=\"capitalize\">{name}</Text>\n\t\t  <div className=\"plate\">\n           {theme.gradients.map((item,idx)=><ColorPlate gradient={item}  color={item}>\n           \t<div className=\"bg\"></div>\n           \t <Text type=\"h5\">\n           \t {name +'-'+ idx} <br />\n           </Text>\n           \t</ColorPlate>)}\n           \n\t\t  </div>\n\t\t</div>\n\t\t}\n\t\treturn <div className=\"cont\">\n\t\t  <Text type=\"h3\" transform=\"capitalize\">{name}</Text>\n\t\t  <div className=\"plate\">\n           {theme.colors[name].map((item,idx)=><ColorPlate   color={item}>\n           \t<div className=\"bg\"></div>\n           \t <Text type=\"h5\">\n           \t {name +'-'+ idx} <br />\n           \t {item}\n           </Text>\n           \t</ColorPlate>)}\n           \n\t\t  </div>\n\t\t</div>\n\n\t}\n\treturn <ColorsContainer>\n\t<Text type=\"h1\" >Colors</Text>\n\t<div className=\"colors\">\n\t  {renderPlate('primary')}\n\t  {renderPlate('dark')}\n\t  {renderPlate('light')}\n\t  {renderPlate('red')}\n\t  {renderPlate('green')}\n\t  {renderPlate('blue')}\n\t  {renderPlate('yellow')}\n\t  {renderPlate('orange')}\n\t  {renderPlate('teal')}\n\t  {renderPlate('purple')}\n\t  {renderPlate('gradient')}\n\n\t</div>\n\t</ColorsContainer>\n}\n\nexport default Colors;","/home/semo/github/AlgoSolver/client/src/elements/elevation/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/shared/libs/error-messages.js",[],"/home/semo/github/AlgoSolver/client/src/components/Text/index.jsx",["139"],"import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport classNames from \"classnames\";\n\n\n\nconst StyledText = styled.div`\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: ${(props) =>\n    props.color ? props.theme.colors[props.color][props.layer || 1] : props.theme.colors.dark[0]};\n  text-transform: ${({ transform }) => transform};\n  font-family: ${({ family }) => family};\n  &.h1 {\n    font-size: 5.3rem;\n    line-height: 1.15em;\n    margin: 1rem 0;\n  }\n  &.h2 {\n    font-size: 3.6rem;\n    line-height: 1.5em;\n    margin: 1rem 0;\n  }\n  &.h3 {\n    font-size: 2.5rem;\n    line-height: 1.5em;\n    margin: 1rem 0;\n  }\n  &.h4 {\n    font-size: 1.8rem;\n    line-height: 1.5em;\n    margin: 1rem 0;\n  }\n  &.h5 {\n    font-size: 1.7rem;\n    line-height: 1.55em;\n    margin: 1rem 0;\n  }\n  &.h6 {\n    font-size: 1.3rem;\n    line-height: 1.5em;\n    font-weight: 500;\n    margin: 1rem 0;\n  }\n  &.p {\n  \n      font-style: normal;\n      font-size: 1.6rem;\n      line-height:2.4rem;\n  }\n  &.lead{\n    font-style: normal;\n    font-weight: bold;\n    font-size: 1.4rem;\n    line-height:2.4rem;\n  }\n  &.bold {\n    font-family: ${({ family }) => family + \"-Bold\"};\n  }\n  &.size {\n    font-size: ${({ size }) => size} !important;\n  }\n  &.mg {\n    margin: ${({ mg }) => mg};\n  }\n  &.pd {\n    margin: ${({ pd }) => pd};\n  }\n`;\n\nconst Text = ({\n  children,\n  type = \"h3\",\n  className,\n  bold,\n  color,\n  size,\n  family = \"Avenir\",\n  mg,\n  pd,\n  layer,\n  transform = \"initial\",\n}) => {\n  const classes = classNames(\n    className,\n    bold && \"bold\",\n    size && \"size\",\n    type,\n    mg,\n    \"mg\",\n    pd,\n    \"pd\"\n  );\n  return (\n    <StyledText\n    layer={layer}\n      className={classes}\n      as={type}\n      family={family}\n      size={size}\n      mg={mg}\n      pd={pd}\n      color={color}\n      transform={transform}\n    >\n      {children}\n    </StyledText>\n  );\n};\n\nexport default Text;\n","/home/semo/github/AlgoSolver/client/src/components/form/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/components/blog/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/components/gate/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/elements/typography/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/elements/buttons/index.jsx",["140"],"import styled from 'styled-components';\nimport Button from '../../components/button/';\nimport Text from '../../components/Text/';\nimport {TwoUser,Activity} from '../../assets/icons/';\n\nconst ButtonsContainer = styled.div`\n\tpadding:2rem;\n    .body{\n    \tpadding: 2rem;\n    \tbackground: #fff;\n    \tborder-radius: 2rem;\n    \tdisplay: flex;\n\n    \talign-items: center;\n    \tflex-wrap: wrap;\n    \tbutton{\n    \t\tmargin:.8rem;\n    \t}\n    }\n`\n\nconst Buttons = ()=>{\n\treturn <ButtonsContainer>\n\t\t<Text type=\"h1\">\n\t\t\tButtons\n\t\t</Text>\n\t\t<div className=\"body\">\n          <Button>\n          \t Primary\n          </Button>\n           <Button theme=\"dark\">\n          \t Dark\n          </Button >\n           <Button theme=\"light\">\n          \tlight\n          </Button>\n           <Button theme=\"red\">\n          \t Red\n          </Button>\n          <Button theme=\"green\">\n          \t green\n          </Button>\n          <Button theme=\"blue\">\n          \t blue\n          </Button>\n          <Button theme=\"yellow\">\n          \t yellow\n          </Button>\n          <Button theme=\"orange\">\n          \t orange\n          </Button>\n          <Button theme=\"teal\">\n          \t teal\n          </Button>\n          <Button theme=\"purple\">\n          \t purble\n          </Button>\n\t\t</div>\n\t\t<div className=\"body\">\n          <Button outlined>\n          \t Primary\n          </Button>\n           <Button outlined  theme=\"dark\">\n          \t Dark\n          </Button  >\n           <Button outlined  theme=\"light\">\n          \tlight\n          </Button >\n           <Button outlined  theme=\"red\">\n          \t Red\n          </Button >\n          <Button outlined  theme=\"green\">\n          \t green\n          </Button >\n          <Button outlined  theme=\"blue\">\n          \t blue\n          </Button >\n          <Button outlined  theme=\"yellow\">\n          \t yellow\n          </Button >\n          <Button outlined  theme=\"orange\">\n          \t orange\n          </Button >\n          <Button outlined  theme=\"teal\">\n          \t teal\n          </Button >\n          <Button outlined  theme=\"purple\">\n          \t purble\n          </Button >\n\t\t</div>\n\t\t<div className=\"body\">\n            <Button disabled>\n          \t Disabled\n          </Button>\n\t\t</div>\n\t\t<div className=\"body\">\n            <Button small>\n          \t Small\n          </Button>\n           <Button>\n          \t Meduim\n          </Button>\n          <Button big>\n          \t Large\n          </Button>\n\t\t</div>\n\t\t<div className=\"body\">\n\t\t  <Button loading>\n          \t \n          </Button>\n\t\t</div>\n\t\t<div className=\"body\">\n\t\t  <Button icon={TwoUser}>\n          \t  two freinds\n          </Button>\n          <Button icon={TwoUser} outlined theme=\"dark\">\n          \t  activity freinds\n          </Button>\n\t\t</div>\n\t</ButtonsContainer>\n}\nexport default Buttons;","/home/semo/github/AlgoSolver/client/src/elements/form/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/assets/icons/index.jsx",[],"/home/semo/github/AlgoSolver/client/src/components/divider/index.jsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":21},{"ruleId":"145","severity":1,"message":"149","line":13,"column":8,"nodeType":"147","messageId":"148","endLine":13,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":78,"column":7,"nodeType":"147","messageId":"148","endLine":78,"endColumn":12},{"ruleId":"145","severity":1,"message":"151","line":94,"column":7,"nodeType":"147","messageId":"148","endLine":94,"endColumn":11},{"ruleId":"145","severity":1,"message":"152","line":1,"column":35,"nodeType":"147","messageId":"148","endLine":1,"endColumn":46},{"ruleId":"145","severity":1,"message":"153","line":1,"column":43,"nodeType":"147","messageId":"148","endLine":1,"endColumn":49},{"ruleId":"154","severity":1,"message":"155","line":184,"column":54,"nodeType":"156","messageId":"157","endLine":184,"endColumn":62},{"ruleId":"158","severity":1,"message":"159","line":108,"column":18,"nodeType":"160","endLine":108,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":112,"column":48,"nodeType":"160","endLine":112,"endColumn":83},{"ruleId":"158","severity":1,"message":"159","line":113,"column":41,"nodeType":"160","endLine":113,"endColumn":76},{"ruleId":"158","severity":1,"message":"159","line":114,"column":58,"nodeType":"160","endLine":114,"endColumn":93},{"ruleId":"158","severity":1,"message":"159","line":115,"column":41,"nodeType":"160","endLine":115,"endColumn":76},{"ruleId":"158","severity":1,"message":"159","line":116,"column":41,"nodeType":"160","endLine":116,"endColumn":76},{"ruleId":"145","severity":1,"message":"161","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":12},{"ruleId":"145","severity":1,"message":"162","line":62,"column":7,"nodeType":"147","messageId":"148","endLine":62,"endColumn":10},{"ruleId":"145","severity":1,"message":"163","line":5,"column":19,"nodeType":"147","messageId":"148","endLine":5,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":79,"column":6,"nodeType":"166","endLine":79,"endColumn":8,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":94,"column":6,"nodeType":"166","endLine":94,"endColumn":15,"suggestions":"169"},{"ruleId":"145","severity":1,"message":"170","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"171","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"145","severity":1,"message":"172","line":4,"column":17,"nodeType":"147","messageId":"148","endLine":4,"endColumn":25},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useDarkMode' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'light' is assigned a value but never used.","'dark' is assigned a value but never used.","'useCallback' is defined but never used.","'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'iconSize'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'code' is defined but never used.","'Img' is assigned a value but never used.","'SubmitHandler' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchedIcons'. Either include it or remove the dependency array. You can also do a functional update 'setSearchedIcons(s => ...)' if you only need 'searchedIcons' in the 'setSearchedIcons' call.","ArrayExpression",["175"],"React Hook useEffect has a missing dependency: 'icons'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearchedIcons' needs the current value of 'icons'.",["176"],"'useEffect' is defined but never used.","'motion' is defined but never used.","'Activity' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [searchedIcons]",{"range":"181","text":"182"},"Update the dependencies array to be: [icons, keyword]",{"range":"183","text":"184"},[1968,1970],"[searchedIcons]",[2339,2348],"[icons, keyword]"]