[{"/media/isalm/New Volume/web/code/project/front/client/src/index.js":"1","/media/isalm/New Volume/web/code/project/front/client/src/reportWebVitals.js":"2","/media/isalm/New Volume/web/code/project/front/client/src/App.js":"3","/media/isalm/New Volume/web/code/project/front/client/src/GlobalStyle.js":"4","/media/isalm/New Volume/web/code/project/front/client/src/shared/hooks/useDarkMode.jsx":"5","/media/isalm/New Volume/web/code/project/front/client/src/pages/elements/index.jsx":"6","/media/isalm/New Volume/web/code/project/front/client/src/components/button/index.jsx":"7","/media/isalm/New Volume/web/code/project/front/client/src/components/navbar/index.jsx":"8","/media/isalm/New Volume/web/code/project/front/client/src/pages/login/index.jsx":"9","/media/isalm/New Volume/web/code/project/front/client/src/pages/signup/index.jsx":"10","/media/isalm/New Volume/web/code/project/front/client/src/pages/new-post/index.jsx":"11","/media/isalm/New Volume/web/code/project/front/client/src/pages/blog/index.jsx":"12","/media/isalm/New Volume/web/code/project/front/client/src/pages/home/index.jsx":"13","/media/isalm/New Volume/web/code/project/front/client/src/elements/icons/index.jsx":"14","/media/isalm/New Volume/web/code/project/front/client/src/elements/elevation/index.jsx":"15","/media/isalm/New Volume/web/code/project/front/client/src/elements/colors/index.jsx":"16","/media/isalm/New Volume/web/code/project/front/client/src/shared/libs/error-messages.js":"17","/media/isalm/New Volume/web/code/project/front/client/src/components/form/index.jsx":"18","/media/isalm/New Volume/web/code/project/front/client/src/components/gate/index.jsx":"19","/media/isalm/New Volume/web/code/project/front/client/src/elements/form/index.jsx":"20","/media/isalm/New Volume/web/code/project/front/client/src/elements/buttons/index.jsx":"21","/media/isalm/New Volume/web/code/project/front/client/src/components/blog/index.jsx":"22","/media/isalm/New Volume/web/code/project/front/client/src/components/Text/index.jsx":"23","/media/isalm/New Volume/web/code/project/front/client/src/elements/typography/index.jsx":"24","/media/isalm/New Volume/web/code/project/front/client/src/assets/icons/index.jsx":"25","/media/isalm/New Volume/web/code/project/front/client/src/components/divider/index.jsx":"26","/media/isalm/New Volume/web/code/project/front/client/src/components/blog/new.jsx":"27","/media/isalm/New Volume/web/code/project/front/client/src/components/blog/preview.jsx":"28"},{"size":609,"mtime":1611151364232,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":4006,"mtime":1611159297805,"results":"32","hashOfConfig":"30"},{"size":1096,"mtime":1611072379484,"results":"33","hashOfConfig":"30"},{"size":679,"mtime":1610186709560,"results":"34","hashOfConfig":"30"},{"size":2822,"mtime":1610811775683,"results":"35","hashOfConfig":"30"},{"size":5544,"mtime":1611173611683,"results":"36","hashOfConfig":"30"},{"size":3786,"mtime":1610810302624,"results":"37","hashOfConfig":"30"},{"size":2096,"mtime":1611151459838,"results":"38","hashOfConfig":"30"},{"size":1249,"mtime":1610810516746,"results":"39","hashOfConfig":"30"},{"size":3880,"mtime":1611175228381,"results":"40","hashOfConfig":"30"},{"size":2063,"mtime":1611156791702,"results":"41","hashOfConfig":"30"},{"size":2268,"mtime":1610356329790,"results":"42","hashOfConfig":"30"},{"size":3340,"mtime":1610815547683,"results":"43","hashOfConfig":"30"},{"size":974,"mtime":1610743603739,"results":"44","hashOfConfig":"30"},{"size":1894,"mtime":1610809304225,"results":"45","hashOfConfig":"30"},{"size":2198,"mtime":1610388509335,"results":"46","hashOfConfig":"30"},{"size":7700,"mtime":1610815667595,"results":"47","hashOfConfig":"30"},{"size":282,"mtime":1610450113618,"results":"48","hashOfConfig":"30"},{"size":699,"mtime":1610813488569,"results":"49","hashOfConfig":"30"},{"size":2886,"mtime":1610801920667,"results":"50","hashOfConfig":"30"},{"size":2440,"mtime":1611157313301,"results":"51","hashOfConfig":"30"},{"size":2088,"mtime":1611171734970,"results":"52","hashOfConfig":"30"},{"size":1391,"mtime":1610791344722,"results":"53","hashOfConfig":"30"},{"size":13154,"mtime":1610716294206,"results":"54","hashOfConfig":"30"},{"size":217,"mtime":1610447792209,"results":"55","hashOfConfig":"30"},{"size":3158,"mtime":1611178727494,"results":"56","hashOfConfig":"30"},{"size":3755,"mtime":1611179067430,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1x0uaxu",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/isalm/New Volume/web/code/project/front/client/src/index.js",[],["126","127"],"/media/isalm/New Volume/web/code/project/front/client/src/reportWebVitals.js",[],"/media/isalm/New Volume/web/code/project/front/client/src/App.js",["128","129","130"],"// export { default as App } from './app';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport { useDarkMode } from \"./shared/hooks/useDarkMode\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Elements from './pages/elements/'\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\nimport Blog from \"./pages/blog\";\nimport NewPost from \"./pages/new-post\";\n\nimport Button from \"./components/button/\";\nimport Navbar from \"./components/navbar/\";\n\n\nexport const theme ={\n  colors:{\n  primary:['#3568d4','#3e7bfa','#6698fa','#ccddff'],\n  dark:['#1c1c28','#28293d','#555770','#8f90a6','#c7c9d9'],\n  light:['#e4e4eb','#ebebf0','#f3f2f5','#fafafc','#ffffff'],\n  red:['#e53535','#ff3b3b','#ff5c5c','#ff8080','#ffe5e5'],\n  green:['#05a660','#06c270','#39d9ba','#57EBA1','#E3FFF1'],\n  blue:['#004FC4','#0063F7','#5B8DEF','#9DBFF9','#E5F0FF'],\n  yellow:['#E5B800','#FFCC00','#FDDD48','#FDED72','#FFFEE5'],\n  orange:['#E507A0','#FF8800','#FDAC42','#FCCC75','#FFF8E5'],\n  teal:['#00B7C4','#00CFDE','#73DFE7','#A9EFF2','#E5FFFF'],\n  purple:['#4D0099','#6600CC','#AC5DD9','#DDA5E9','#FFE5FF'] \n},\n  gradients:[\n  'linear-gradient(147.14deg, #5B8DEF 6.95%, #0063F7 93.05%)',\n  'linear-gradient(147.14deg, #FF8800 6.95%, #E63535 93.05%)',\n  'linear-gradient(147.14deg, #3E7BFA 6.95%, #6600CC 93.05%)',\n  'linear-gradient(147.14deg, #00CFDE 6.95%, #05A660 93.05%)',\n  'linear-gradient(145.51deg, #FDDD48 7.21%, #00B7C4 94.47%)',\n  'linear-gradient(147.14deg, #FF3B3B 6.95%, #6600CC 93.05%)',\n  'linear-gradient(147.14deg, #73DFE7 6.95%, #0063F7 93.05%)',\n  'linear-gradient(145.51deg, #AC5DD9 7.21%, #004FC4 94.47%)'\n  ],\n  elevation:[\n  {\n    shadow:'inset 0px 0.5px 4px rgba(96, 97, 112, 0.32)',\n    desc:'-01 (inset) Focused input forms',\n  },\n  {\n    shadow:'none',\n    desc:'00 (Base) Background, Alerts, Button disabled, Input Forms disabled '\n  },\n  {\n    shadow:'0px 0px 1px rgba(40, 41, 61, 0.08), 0px 0.5px 2px rgba(96, 97, 112, 0.16)',\n    desc:'01 Card, Pressed button, Progressive button'\n  },\n  {\n    shadow:'0px 0px 1px rgba(40, 41, 61, 0.04), 0px 2px 4px rgba(96, 97, 112, 0.16)',\n    desc:'02 Button, Notification badges'\n  },\n  {\n    shadow:' 0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16)',\n    desc:'03 Navigation Menu, Bar'\n  },\n   {\n    shadow:'0px 2px 4px rgba(40, 41, 61, 0.04), 0px 8px 16px rgba(96, 97, 112, 0.16)',\n    desc:'04 Card Raised, Button Raised, Dropdown Menu'\n  },\n   {\n    shadow:'0px 2px 8px rgba(40, 41, 61, 0.04), 0px 16px 24px rgba(96, 97, 112, 0.16)',\n    desc:'05 Picker, Popover'\n  },\n  {\n    shadow:'0px 2px 8px rgba(40, 41, 61, 0.08), 0px 20px 32px rgba(96, 97, 112, 0.24)',\n    desc:'06 Modals, Dialogue'\n  },\n  ]\n}\n\n\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  max-width: 100%;\n  min-width: 375px;\n  position:relative;\n  width:100%;\n  max-width: 1376px;\n  margin:0 auto;\n  padding: 0px 32px;\n  overflow:hidden;\n`;\nconst Main = styled.div`\n  position:relative;\n  width:100%;\n  max-width: 1376px;\n  margin:0 auto;\n  padding: 0px 32px;\n  overflow:hidden;\n`\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router>\n        <Navbar />\n         <Wrapper className=\"App\">\n          <Switch>\n          \n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            \n            \n            <Route  path=\"/login\">\n              <Login />\n            </Route>\n            <Route  path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/blog\">\n              <Blog />\n            </Route>\n             <Route path=\"/new-post\">\n              <NewPost />\n            </Route>\n            <Route path=\"/elements\">\n              <Elements />\n            </Route>\n           \n          </Switch>\n        </Wrapper>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/media/isalm/New Volume/web/code/project/front/client/src/GlobalStyle.js",[],"/media/isalm/New Volume/web/code/project/front/client/src/shared/hooks/useDarkMode.jsx",["131"],"import {useEffect,useState,useRef,useCallback} from 'react';\r\n\r\nconst getCurrentTheme = ()=>{\r\n\tconst currentTheme = localStorage.getItem('algosolver-theme');\r\n    console.log(currentTheme)\r\n\treturn currentTheme ? currentTheme : 'light';\r\n}\r\n\r\n\r\n\r\n// i will use redux after that;\r\n\r\nexport const useDarkMode = ()=> {\r\n\tconst [theme,setTheme] = useState(()=>getCurrentTheme());\r\n    const isMounted = useRef(false);\r\n    \r\n    const toggleTheme = (currentTheme) =>{\r\n    \tsetTheme(currentTheme);\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(isMounted.current){\r\n\t\tlocalStorage.setItem('algosolver-theme',theme);\r\n\t\t}\r\n\t\tisMounted.current = true;\r\n\t},[theme]);\r\n\r\n\treturn [theme,toggleTheme]; \r\n}","/media/isalm/New Volume/web/code/project/front/client/src/pages/elements/index.jsx",["132"],"import {BrowserRouter as Router , Route , Switch ,Link , useLocation} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Icons from '../../elements/icons/'\r\nimport Elevation from '../../elements/elevation/'\r\nimport Colors from '../../elements/colors/'\r\nimport Buttons from '../../elements/buttons'\r\nimport Typography from '../../elements/typography'\r\nimport Forms from '../../elements/form'\r\n\r\nconst PageContainer = styled.div`\r\n\twidth: 100%;\r\n\tmax-width: 120rem;\r\n\tmargin: 0 auto;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`\r\nconst ElementsSidebar = styled.div`\r\n\tflex:0 1 30rem;\r\n\tmargin: 1rem 0 0;\r\n\theight: calc(100vh - 7.4rem);\r\n\toverflow-y:auto;\r\n\tpadding:2rem;\r\n\tborder-right:2px solid #ddd;\r\n\t.sidebar{\r\n\t\twidth:100%;\r\n\t\t&__menu{\r\n\t\t\tlist-style-type: none;\r\n\t\t}\r\n\t\t&__item{\r\n\t\t\tmargin:.8rem;\r\n\t\t}\r\n\t\t&__link{\r\n\t\t\tcolor:${({theme})=>theme.text};\r\n\t\t\tborder-radius: .5rem;\r\n\t\t\theight:3.2rem;\r\n\t\t\tpadding-left:.8rem;\r\n\t\t\tpadding-right: .8rem;\r\n\t\t\ttransition: background-color 0.2s ease, color 0.2s ease;\r\n\t\t\tfont-size:1.4rem;\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-transform: capitalize;\r\n\t\t\tfont-family: 'Avenir';\r\n\t\t\tmargin:0 .4rem;\r\n\t\t    display: flex;\r\n\t\t    justify-content:center;\r\n\t\t    align-items: center;\r\n\t\t    &:hover{\r\n\t\t    \tbackground:${({theme})=>theme.bg2};\r\n\t\t    };\r\n\t\t    &.active{\r\n\t\t    \tbackground:${({theme})=>theme.bg2} !important;\r\n\t\t    }\r\n\t\t}\r\n\t}\r\n`\r\nconst ElementsBody = styled.div`\r\n\tflex:1;\r\n`\r\n\r\nconst LinkItem = ({name,active})=>{\r\n\treturn <li className=\"sidebar__item\">\r\n\t   \t\t<Link to={`/elements/${name}`} className={` sidebar__link ${active===name ? 'active':''}`}>{name}</Link>\r\n\t   \t</li>\r\n}\r\nconst Sidebar = ()=>{\r\n\tconst {pathname} =useLocation();\r\n\tconst active = pathname.split('/')[2];\r\n\tconsole.log(active)\r\n\treturn <ElementsSidebar>\r\n\t   <div className=\"sidebar\">\r\n\t   \t<ul className=\"sidebar__menu\">\r\n\t     \t<LinkItem name=\"colors\" active={active}/>\r\n\t   \t\t<LinkItem name=\"icons\" active={active}/>\r\n\t   \t\t<LinkItem name=\"elevation\" active={active}/>\r\n\t   \t\t<LinkItem name=\"buttons\" active={active}/>\r\n\t   \t\t<LinkItem name=\"typography\" active={active}/>\r\n\t   \t    <LinkItem name=\"forms\" active={active}/>\r\n\t   \t</ul>\r\n\t   </div>\r\n\t </ElementsSidebar>\r\n}\r\nconst Elements = ()=>{\r\n\treturn <PageContainer>\r\n\t<Router>\r\n\t  <>\r\n\t <Sidebar />\r\n\t <ElementsBody>\r\n\t  <Route path=\"/elements/colors\">\r\n\t   <Colors />\r\n\t  </Route>\r\n\t  <Route path=\"/elements/icons\">\r\n\t   <Icons />\r\n\t  </Route>\r\n\t  <Route path=\"/elements/buttons\">\r\n\t   <Buttons />\r\n\t  </Route>\r\n\t  <Route path=\"/elements/elevation\">\r\n\t   <Elevation />\r\n\t  </Route>\r\n\t  <Route path=\"/elements/typography\">\r\n\t   <Typography />\r\n\t  </Route>\r\n\t  <Route path=\"/elements/forms\">\r\n\t   <Forms />\r\n\t  </Route>\r\n\t </ElementsBody>\r\n\t  </>\r\n\t </Router>\r\n\t</PageContainer>\r\n} \r\n\r\nexport default Elements","/media/isalm/New Volume/web/code/project/front/client/src/components/button/index.jsx",["133"],"import styled,{keyframes} from 'styled-components';\r\nimport classNames from \"classnames\";\r\n\r\nconst types = ['primary', 'green', 'purple', 'teal', 'red','dark','blue']\r\n\r\nconst StyledButton = styled.button `\r\n    \r\n    font-size: 1.6rem;\r\n    line-height: 1.6;\r\n    background: ${({theme,type})=>theme.colors[type][1]};\r\n    color: #fff;\r\n    border-radius: .6rem;\r\n    padding: 0 1.6rem 0;\r\n    height:3.8rem;\r\n    min-width:8rem;\r\n    text-align: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n    box-shadow:${({theme})=>theme.elevation[3].shadow};\r\n    transition: all 200ms ease-in-out;\r\n    font-family: 'Avenir';\r\n    letter-spacing: 0.02rem;\r\n    border: 2px solid ${(props)=>props.theme.colors[props.type][1]};\r\n    &.big{\r\n        height: 4.8rem;\r\n    }\r\n    .icon{\r\n      margin-right: 1rem;\r\n      display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    }\r\n    &.small{\r\n      height:3.2rem;\r\n      font-size:1.4rem;\r\n      font-family:'Avenir';\r\n    }\r\n    &.contained{\r\n         color:${({theme,type})=>types.some((item)=>type===item) ? theme.colors.light[4] : theme.colors.dark[0] };\r\n         &:hover{\r\n           background: ${({theme,type})=>theme.colors[type][2]};\r\n           border-color:  ${({theme,type})=>theme.colors[type][2]};\r\n         }\r\n        \r\n         &:active{\r\n           background: ${({theme,type})=>theme.colors[type][0]};\r\n           border-color:  ${({theme,type})=>theme.colors[type][0]};\r\n           box-shadow:${({theme})=>theme.elevation[2].shadow};\r\n         }\r\n          &:focus{\r\n           border-color:  ${({theme,type})=>theme.colors[type][4] || theme.colors[type][3]};\r\n           border-radius: .7rem;\r\n         }\r\n         .icon{\r\n           svg{\r\n      path{\r\n        stroke:${({theme,type})=>types.some((item)=>type===item) ? theme.colors.light[4] : theme.colors.dark[0] };\r\n      }\r\n    }\r\n         }\r\n    }\r\n    &.outlined{\r\n       background:transparent;\r\n       color:${({theme,type})=>theme.colors[type][1]};\r\n       border-color:  ${({theme,type})=>theme.colors[type][3]};\r\n       &:hover{\r\n           background: ${({theme,type})=>theme.colors[type][3]};\r\n           border-color:  ${({theme,type})=>theme.colors[type][3]};\r\n         }\r\n        \r\n         &:active{\r\n           background: ${({theme,type})=>theme.colors[type][4 ]};\r\n           border-color:  ${({theme,type})=>theme.colors[type][2]};\r\n           box-shadow:${({theme})=>theme.elevation[2].shadow};\r\n         }\r\n          &:focus{\r\n           border-color:  ${({theme,type})=>theme.colors[type][0]};\r\n           border-radius: .7rem;\r\n         }\r\n\r\n        .icon{\r\n           svg{\r\n      path{\r\n        stroke:${({theme,type})=>theme.colors[type][1]};\r\n      }\r\n    }\r\n         }\r\n    }\r\n    &.link{\r\n       background:transparent;\r\n       border:0;\r\n       text-decoration: underline;\r\n       display: inline;\r\n       color:${({color,theme})=>color ? color : theme.colors.blue[1]};\r\n       box-shadow: none;\r\n       padding:0;\r\n       font-size:1.2rem;\r\n       &:hover{\r\n        text-decoration: none;\r\n       }\r\n\r\n    }\r\n    &.text{\r\n      background:transparent;\r\n       border:0;\r\n       display: inline;\r\n       color:${({color,theme})=>color ? color : theme.colors.dark[1]};\r\n       box-shadow: none;\r\n       &:hover{\r\n        background: ${({theme,type})=>theme.colors.primary[3]};\r\n       }\r\n    }\r\n    &.squared{\r\n      border-radius: 0;\r\n    }\r\n    &.block{\r\n      display: block;\r\n      width:100%;\r\n    }\r\n    &.disabled{\r\n      background: ${({theme,type})=>theme.colors.light[0]} !important;\r\n      color:${({theme,type})=>theme.colors.dark[4]} !important;\r\n      box-shadow: none;\r\n      border-color: ${({theme,type})=>theme.colors.light[0]} !important;\r\n      cursor: not-allowed !important;\r\n    }\r\n    &.loading{\r\n        background: ${({theme,type})=>theme.colors.light[0]} !important;\r\n        border-color: ${({theme,type})=>theme.colors.light[0]} !important;\r\n        cursor: normal !important;\r\n    }\r\n}\r\n`\r\n\r\nconst donutSpin = keyframes`\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nconst LoadingState = styled.span`\r\n  display: inline-block;\r\n    border: 4px solid ${({theme,type})=>theme.colors.dark[4]};;\r\n    border-left-color: ${({theme,type})=>theme.colors.dark[1]};\r\n    border-radius: 50%;\r\n    width: 24px;\r\n    height: 24px;\r\n    animation: ${donutSpin} .8s linear infinite;\r\n`\r\nconst Button = ({\r\n    children,\r\n    disabled,\r\n    big,\r\n    theme = \"primary\",\r\n    block,\r\n    outlined,\r\n    link,\r\n    squared,\r\n    circle,\r\n    style = {},\r\n    className,\r\n    loading,\r\n    small,\r\n    text,\r\n    icon=null,\r\n    scale = true,\r\n    iconSize='2.4rem',\r\n    iconFill='#1c1c28',\r\n    ...rest\r\n}) => {\r\n    const classes = classNames(\r\n        className,\r\n        `${outlined ? \"outlined\":link ? \"link\" : \"contained\"}`,\r\n        big && \"big\",\r\n        small && \"small\",\r\n        squared && \"squared\",\r\n        block && \"block\",\r\n        circle && \"circle\",\r\n        loading && \"loading\",\r\n        scale && 'scaling',\r\n        disabled && 'disabled',\r\n        text && 'text'\r\n    );\r\n\r\n    return <StyledButton\r\n  style={style}\r\n  className={classes}\r\n  type={theme}\r\n  disabled={disabled || loading}\r\n  {...rest}\r\n  >\r\n    {icon && <span className=\"icon\" >{icon({iconSize,iconSize})}</span>}\r\n\r\n  <span className=\"center\"> {!loading  ? children : <LoadingState type={theme}/>} </span> \r\n  </StyledButton>\r\n}\r\nexport default Button;","/media/isalm/New Volume/web/code/project/front/client/src/components/navbar/index.jsx",["134","135","136","137","138","139"],"import styled from 'styled-components';\r\nimport Button from '../button'\r\nimport {Link,useLocation} from 'react-router-dom';\r\nconst StyledNavbar = styled.div`\r\n    &.navnormal{\r\n    \t.nav__container{\r\n\t\t\tbox-shadow: ${({ theme }) => theme.elevation[4].shadow};\r\n\t\t\tbackground:${({ theme }) => theme.colors.light[4]};\r\n\t\t\twidth:100%;\r\n            .nav__body{\r\n\t\t     display: flex;\r\n\t\t     width: 100%;\r\n\t\t      max-width: 111.8rem;\r\n\t\t      margin: 0 auto;\r\n\t          }\r\n\t\t}\r\n\t}\r\n    &.floatnav{\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999;\r\n    margin-top:2rem;\r\n\tpadding: 0rem 8rem;\r\n\t.nav__container{\r\n\t\t\tborder-radius: .9rem;\r\n\t\t\tbox-shadow: 0 1.5rem 2rem -0.5rem rgba(0,0,0,0.07), 0 0.25rem 2rem 0 rgba(0,0,0,0.03);\r\n\t\t\tbackground:${({theme})=>theme.bg2};\t\t\r\n\t\t    max-width: 117rem;\r\n\t\t\tmargin: 0 auto;\r\n\t\t}\r\n\t\t.nav__body{\r\n\t     display: flex;\r\n\t     width: 100%;\r\n\t}\r\n    }\r\n\t.nav__brand{\r\n\t\theight: 6.4rem;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\ta{\r\n\t\t\tpadding:0 2rem;\r\n\t\t\tspan{\r\n\t\t\t\tdisplay:inline-block;\r\n\t\t\t\tmargin-right:8rem;\r\n                font-family: 'Avenir';\r\n                font-weight: 700;\r\n                font-size:2.5rem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n    .menu{\r\n\t\tdisplay:flex;\r\n\t\tflex:1;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tlist-style-type: none;\r\n\t\t&__links{\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tflex:1;\r\n\t\t\tjustify-content: center;\r\n\t\t   \r\n\r\n\t\t\t\r\n\t\t}\r\n\t\t&__link{\r\n\t\t\tcolor:${({theme})=>theme.text};\r\n\t\t\tborder-radius: .5rem;\r\n\t\t\theight:3.2rem;\r\n\t\t\tpadding-left:1.6rem;\r\n\t\t\tpadding-right: 1.6rem;\r\n\t\t\ttransition: background-color 0.2s ease, color 0.2s ease;\r\n\t\t\tfont-size:1.4rem;\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-transform: capitalize;\r\n\t\t\tfont-family: 'Avenir';\r\n\t\t\tmargin:0 .4rem;\r\n\t\t    display: flex;\r\n\t\t    justify-content:center;\r\n\t\t    align-items: center;\r\n\t\t    &:hover{\r\n\t\t    \tbackground:${({theme})=>theme.bg};\r\n\t\t    };\r\n\t\t}\r\n\t\t&__buttons{\r\n          display: flex;\r\n          align-items: center;\r\n          margin-right:2rem;\r\n         .login{\r\n             margin-right:1.6rem;\r\n          }\r\n\t\t}\r\n\t}\r\n\t\r\n`\r\n\r\nconst Navbar = () =>{\r\n\tconst location = useLocation();\r\n\tconsole.log(location);\r\n\treturn <StyledNavbar className={`nav ${location.pathname === '/' ? \"floatnav\" :'navnormal'}`}>\r\n\t\t<div className=\"nav__container\">\r\n\t\t\t<nav className=\"nav__body\">\r\n              <div className=\"nav__brand\">\r\n                 <a href=\"\"><span>AlgoSolver</span></a>\r\n              </div>\r\n              <ul className=\"menu\">\r\n              \t<div className=\"menu__links\">\r\n\t              \t    <li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Explore</a></li>\t\r\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Playground</a></li>\r\n\t      \t  \t\t\t<Link to=\"/blog\"><li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Blog</a></li></Link>\t\r\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Abouts us</a></li>\t\r\n\t      \t  \t\t\t<li className=\"menu__item\"><a href=\"#\" className=\"menu__link\">Contact</a></li>\t\t\r\n              \t</div>\r\n              \t<div className=\"menu__buttons\">\r\n                    <li className=\"menu__item login\">\r\n\t                    <Link to=\"/login\">\r\n\t\t                    <Button small>\r\n\t\t                       Log in\r\n\t\t                    </Button>\r\n\t\t                </Link>\r\n                    </li>\t\r\n                    <li className=\"menu__item\">\r\n                        <Link to=\"/signup\">\r\n\t\t                    <Button outlined small>\r\n\t\t                       Sign in\r\n\t\t                    </Button>\r\n\t\t                </Link>\r\n                    </li>\t\r\n              \t</div>\r\n              </ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t</StyledNavbar>\r\n}\r\nexport default Navbar;","/media/isalm/New Volume/web/code/project/front/client/src/pages/login/index.jsx",["140"],"import Text from \"../../components/Text/\";\r\nimport styled from \"styled-components\";\r\nimport { Form, TextInput, CheckBox, Divider } from \"../../components/form/\";\r\nimport Button from \"../../components/button/\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { checkErrors } from \"../../shared/libs/error-messages\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1118px;\r\n  margin: 0 auto;\r\n`;\r\nconst LoginForm = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (e) => console.log(e);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextInput\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"E-mail Address\"\r\n        register={register({\r\n          required: true,\r\n          pattern: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/i,\r\n        })}\r\n        error={checkErrors(\"email\", errors)}\r\n      />\r\n      <TextInput\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        register={register({ required: true, minLength: 6, maxLength: 32 })}\r\n        error={checkErrors(\"password\", errors)}\r\n      />\r\n      <CheckBox />\r\n      <Button block>Login</Button>\r\n    </form>\r\n  );\r\n};\r\nconst Login = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Form>\r\n        <Text\r\n          style={{\r\n            lineHeight: 1.3,\r\n          }}\r\n          mg=\"0 0 1rem 0\"\r\n          type=\"h2\"\r\n          size=\"2.5rem\"\r\n          family=\"Linotte\"\r\n          bold\r\n        >\r\n          Login To Your Account\r\n        </Text>\r\n        <LoginForm />\r\n        <div\r\n          style={{\r\n            margin: \"1rem 0\",\r\n            alignItems: \"center\",\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n          }}\r\n        >\r\n          <Button link >\r\n            Forgot your password?\r\n          </Button>\r\n          <Button link>\r\n            Don't have an account\r\n          </Button>\r\n          </div>\r\n          <Divider />\r\n          <Button>Login with Google</Button>\r\n        \r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/media/isalm/New Volume/web/code/project/front/client/src/pages/signup/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/pages/new-post/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/pages/blog/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/pages/home/index.jsx",["141","142"],"import styled from 'styled-components';\r\nimport hero from '../../assets/images/hero.svg';\r\nimport code from '../../assets/images/code2.png';\r\nimport Button from '../../components/button/';\r\nconst HeroSection = styled.section`\r\n\tbackground-color:${(props)=>props.theme.bg2};\r\n    padding: 18rem 0 14rem;\r\n    &::before{\r\n    \tcontent: '';\r\n\t    display: block;\r\n\t    width: 3500px;\r\n\t    height: 1000px;\r\n\t    background:${(props)=>props.theme.bg2} url(${hero}) 50% 100% no-repeat;\r\n\t    background-size: cover;\r\n\t    position: absolute;\r\n\t    top: 0;\r\n\t    left: 50%;\r\n\t    transform: translateX(-50%);\r\n    }\r\n    .container{\r\n    \tposition: relative;\r\n    \tz-index: 10;\r\n    \twidth: 100%;\r\n\t    max-width: 1130px;\r\n\t    padding: 0 20px;\r\n\t    margin: 0 auto;\r\n\t    &__row{\r\n\t    \tdisplay: flex;\r\n\t    \talign-items: center;\r\n\t    \tjustify-content: center;\r\n\t    \t.intro{\r\n\t    \t\twidth:60rem; \r\n\t    \t\ttext-align: center;\r\n\t    \t\t&__title{\r\n\t    \t\t\tcolor:${({theme})=>theme.bg2};\r\n\t    \t\t\tfont-weight: 700;\r\n\t    \t\t\tfont-size:5rem;\r\n\t    \t\t\tfont-family: 'Avenir-Bold';\r\n\t    \t\t\tmargin-bottom: 3rem;\r\n\t    \t\t\tspan{\r\n\t    \t\t\t\tfont-weight: bold;\r\n\t    \t\t\t\tcolor:${({theme})=>theme.primary};\r\n\t    \t\t\t}\r\n\t    \t\t}\r\n\t    \t\t&__subtitle{\r\n\t    \t\t\tcolor:${(props)=>props.theme.bg};\r\n\t    \t\t\tfont-size:1.5rem;\r\n\t    \t\t\tfont-weight: 300;\r\n\t    \t\t\tline-height: 2;\r\n\t    \t\t\tletter-spacing: .03rem;\r\n\t    \t\t\ttext-transform: capitalize;\r\n\t    \t\t\tfont-family: 'Avenir';\r\n\t    \t\t\tmargin-bottom:2rem;\r\n\r\n\r\n\t    \t\t}\r\n\t    \t}\r\n\t    }\r\n    }\r\n`\r\n\r\nconst Img = styled.img`\r\n\twidth: 3500px;\r\n\t    height: 1000px;\r\n`\r\n\r\n\r\nconst Hero = ()=>{\r\n\treturn <HeroSection>\r\n\t<div className=\"container\">\r\n\t   <div className=\"container__row\">\r\n\t        <div className=\"intro\">\r\n\t        \t<h1 className=\"intro__title\">\r\n\t        \t\tLeverage Your <span>\r\n\t        \t\tComputer Programming\r\n\t        \t\t</span> Skills\r\n\t        \t</h1>\r\n\t        \t<p className=\"intro__subtitle\">\r\n\t               Algo solver was designed to help you to get sharp\r\n\t               with algoritm, data structures, pattern techniques and more. \r\n\t        \t</p>\r\n\t        \t<Button big block>\r\n\t        \t   Make An Account\r\n\t        \t</Button>\r\n\t        </div>\r\n       </div>\r\n    </div>  \r\n\t</HeroSection>\r\n}\r\n\r\nexport default Hero;","/media/isalm/New Volume/web/code/project/front/client/src/elements/icons/index.jsx",["143","144"],"import styled from \"styled-components\";\r\nimport * as Vectors from \"../../assets/icons\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { TextInput } from \"../../components/form\";\r\n\r\nimport { Search } from \"../../assets/icons\";\r\nconst IconContainer = styled.div`\r\n  .icons {\r\n    margin: 0;\r\n    height: 100%;\r\n    &__wrapper {\r\n      max-width: 100%;\r\n      padding: 2rem;\r\n    }\r\n    &__search {\r\n      margin-top: 2rem;\r\n      box-shadow: ${({theme})=>theme.shadow2};\r\n      padding:2rem;\r\n      text-align: center;\r\n      background:#fff;\r\n      border-radius: 10px;\r\n    }\r\n    &__svg {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n      &--icon {\r\n      \tmax-width: calc(100% / 4 - 2rem);\r\n        flex: calc(100% / 3 - 4rem);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        margin: 1rem;\r\n        background:#fff;\r\n        border-radius: 10px;\r\n        padding: 2rem;\r\n        box-shadow: ${({theme})=>theme.shadow2};\r\n        transition: all 0.3s;\r\n\r\n        &:hover {\r\n          transform: translateY(-2px);\r\n        }\r\n        h1 {\r\n          &::selection {\r\n            background: red;\r\n            color: #fff;\r\n          }\r\n          font-size: 1.6rem;\r\n          margin: 2rem 0;\r\n        }\r\n      }\r\n      svg {\r\n        width: 3rem;\r\n        height: 3rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Icons = () => {\r\n  const inputRef = useRef(null);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [searchedIcons, setSearchedIcons] = useState([]);\r\n  const [icons, setIcons] = useState([\r\n    ...Object.keys(Vectors).map((key) => {\r\n      return { name: key, svg: Vectors[key] };\r\n    }),\r\n  ]);\r\n  useEffect(() => {\r\n    setIcons((X) =>\r\n      X.sort((a, b) => {\r\n        let textA = a.name.toUpperCase();\r\n        let textB = b.name.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      })\r\n    );\r\n    setSearchedIcons(searchedIcons);\r\n  }, []);\r\n  useEffect(() => {\r\n    if(! (inputRef?.current))return;\r\n    const timer = setTimeout(() => {\r\n      if (keyword === inputRef.current.value) {\r\n        setSearchedIcons(\r\n          icons.filter((item) =>\r\n            item.name.toUpperCase().includes(keyword.toUpperCase())\r\n          )\r\n        );\r\n      }\r\n          }, 400);\r\n  \r\n\r\n    return () => clearTimeout(timer);\r\n  }, [keyword]);\r\n  return (\r\n    <IconContainer>\r\n      <div className=\"icons\">\r\n        <div className=\"icons__wrapper\">\r\n          <div className=\"icons__search\">\r\n            <div className=\"form__unit\">\r\n              <TextInput\r\n                type=\"text\"\r\n                id=\"iconed\"\r\n                register={inputRef}\r\n                icon={Search}\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className=\"form__input iconed\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"icons__svg\">\r\n            {searchedIcons.map((item) => (\r\n              <div className=\"icons__svg--icon\">\r\n                {item.svg(\"ahmed\")}\r\n                <h1>{item.name}</h1>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </IconContainer>\r\n  );\r\n};\r\nexport default Icons;\r\n","/media/isalm/New Volume/web/code/project/front/client/src/elements/elevation/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/elements/colors/index.jsx",["145"],"import styled from 'styled-components';\r\nimport {theme} from '../../App.js';\r\nimport Text from '../../components/Text/';\r\nimport {useEffect} from 'react';\r\nconst \t ColorsContainer= styled.div`\r\n\tpadding:2rem;\r\n\t.plate{\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\r\n\t}\r\n\t.cont{\r\n\t\tpadding: 2rem;\r\n\t\tbackground:#fff;\r\n\t\tborder-radius: 20px;\r\n\t\tmargin:2rem 0;\r\n\t}\r\n`\r\n\r\nconst ColorPlate = styled.div`\r\n\t.bg{\r\n\t\tpadding:4rem;\r\n\t    border-radius: 2rem;\r\n\t\tbackground:${({color,gradient})=>gradient ? gradient : color};\r\n\t}\r\n    \tmargin-right:2rem;\r\n`\r\n\r\nconst Colors = ()=>{\r\n\tconst renderPlate=(name)=>{\r\n\t\tif(name === 'gradient'){\r\n\t\t\treturn <div className=\"cont\">\r\n\t\t  <Text type=\"h3\" transform=\"capitalize\">{name}</Text>\r\n\t\t  <div className=\"plate\">\r\n           {theme.gradients.map((item,idx)=><ColorPlate gradient={item}  color={item}>\r\n           \t<div className=\"bg\"></div>\r\n           \t <Text type=\"h5\">\r\n           \t {name +'-'+ idx} <br />\r\n           </Text>\r\n           \t</ColorPlate>)}\r\n           \r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t}\r\n\t\treturn <div className=\"cont\">\r\n\t\t  <Text type=\"h3\" transform=\"capitalize\">{name}</Text>\r\n\t\t  <div className=\"plate\">\r\n           {theme.colors[name].map((item,idx)=><ColorPlate   color={item}>\r\n           \t<div className=\"bg\"></div>\r\n           \t <Text type=\"h5\">\r\n           \t {name +'-'+ idx} <br />\r\n           \t {item}\r\n           </Text>\r\n           \t</ColorPlate>)}\r\n           \r\n\t\t  </div>\r\n\t\t</div>\r\n\r\n\t}\r\n\treturn <ColorsContainer>\r\n\t<Text type=\"h1\" >Colors</Text>\r\n\t<div className=\"colors\">\r\n\t  {renderPlate('primary')}\r\n\t  {renderPlate('dark')}\r\n\t  {renderPlate('light')}\r\n\t  {renderPlate('red')}\r\n\t  {renderPlate('green')}\r\n\t  {renderPlate('blue')}\r\n\t  {renderPlate('yellow')}\r\n\t  {renderPlate('orange')}\r\n\t  {renderPlate('teal')}\r\n\t  {renderPlate('purple')}\r\n\t  {renderPlate('gradient')}\r\n\r\n\t</div>\r\n\t</ColorsContainer>\r\n}\r\n\r\nexport default Colors;","/media/isalm/New Volume/web/code/project/front/client/src/shared/libs/error-messages.js",[],"/media/isalm/New Volume/web/code/project/front/client/src/components/form/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/components/gate/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/elements/form/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/elements/buttons/index.jsx",["146"],"import styled from 'styled-components';\r\nimport Button from '../../components/button/';\r\nimport Text from '../../components/Text/';\r\nimport {TwoUser,Activity} from '../../assets/icons/';\r\n\r\nconst ButtonsContainer = styled.div`\r\n\tpadding:2rem;\r\n    .body{\r\n    \tpadding: 2rem;\r\n    \tbackground: #fff;\r\n    \tborder-radius: 2rem;\r\n    \tdisplay: flex;\r\n\r\n    \talign-items: center;\r\n    \tflex-wrap: wrap;\r\n    \tbutton{\r\n    \t\tmargin:.8rem;\r\n    \t}\r\n    }\r\n`\r\n\r\nconst Buttons = ()=>{\r\n\treturn <ButtonsContainer>\r\n\t\t<Text type=\"h1\">\r\n\t\t\tButtons\r\n\t\t</Text>\r\n\t\t<div className=\"body\">\r\n          <Button>\r\n          \t Primary\r\n          </Button>\r\n           <Button theme=\"dark\">\r\n          \t Dark\r\n          </Button >\r\n           <Button theme=\"light\">\r\n          \tlight\r\n          </Button>\r\n           <Button theme=\"red\">\r\n          \t Red\r\n          </Button>\r\n          <Button theme=\"green\">\r\n          \t green\r\n          </Button>\r\n          <Button theme=\"blue\">\r\n          \t blue\r\n          </Button>\r\n          <Button theme=\"yellow\">\r\n          \t yellow\r\n          </Button>\r\n          <Button theme=\"orange\">\r\n          \t orange\r\n          </Button>\r\n          <Button theme=\"teal\">\r\n          \t teal\r\n          </Button>\r\n          <Button theme=\"purple\">\r\n          \t purble\r\n          </Button>\r\n\t\t</div>\r\n\t\t<div className=\"body\">\r\n          <Button outlined>\r\n          \t Primary\r\n          </Button>\r\n           <Button outlined  theme=\"dark\">\r\n          \t Dark\r\n          </Button  >\r\n           <Button outlined  theme=\"light\">\r\n          \tlight\r\n          </Button >\r\n           <Button outlined  theme=\"red\">\r\n          \t Red\r\n          </Button >\r\n          <Button outlined  theme=\"green\">\r\n          \t green\r\n          </Button >\r\n          <Button outlined  theme=\"blue\">\r\n          \t blue\r\n          </Button >\r\n          <Button outlined  theme=\"yellow\">\r\n          \t yellow\r\n          </Button >\r\n          <Button outlined  theme=\"orange\">\r\n          \t orange\r\n          </Button >\r\n          <Button outlined  theme=\"teal\">\r\n          \t teal\r\n          </Button >\r\n          <Button outlined  theme=\"purple\">\r\n          \t purble\r\n          </Button >\r\n\t\t</div>\r\n\t\t<div className=\"body\">\r\n            <Button disabled>\r\n          \t Disabled\r\n          </Button>\r\n\t\t</div>\r\n\t\t<div className=\"body\">\r\n            <Button small>\r\n          \t Small\r\n          </Button>\r\n           <Button>\r\n          \t Meduim\r\n          </Button>\r\n          <Button big>\r\n          \t Large\r\n          </Button>\r\n\t\t</div>\r\n\t\t<div className=\"body\">\r\n\t\t  <Button loading>\r\n          \t \r\n          </Button>\r\n\t\t</div>\r\n\t\t<div className=\"body\">\r\n\t\t  <Button icon={TwoUser}>\r\n          \t  two freinds\r\n          </Button>\r\n          <Button icon={TwoUser} outlined theme=\"dark\">\r\n          \t  activity freinds\r\n          </Button>\r\n\t\t</div>\r\n\t</ButtonsContainer>\r\n}\r\nexport default Buttons;","/media/isalm/New Volume/web/code/project/front/client/src/components/blog/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/components/Text/index.jsx",["147"],"import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\n\r\nconst StyledText = styled.div`\r\n  font-weight: 300;\r\n  font-size: 1.6rem;\r\n  color: ${(props) =>\r\n    props.color ? props.theme.colors[props.color][props.layer || 1] : props.theme.colors.dark[0]};\r\n  text-transform: ${({ transform }) => transform};\r\n  font-family: ${({ family }) => family};\r\n  &.h1 {\r\n    font-size: 5.3rem;\r\n    line-height: 1.15em;\r\n    margin: 1rem 0;\r\n  }\r\n  &.h2 {\r\n    font-size: 3.6rem;\r\n    line-height: 1.5em;\r\n    margin: 1rem 0;\r\n  }\r\n  &.h3 {\r\n    font-size: 2.5rem;\r\n    line-height: 1.5em;\r\n    margin: 1rem 0;\r\n  }\r\n  &.h4 {\r\n    font-size: 1.8rem;\r\n    line-height: 1.5em;\r\n    margin: 1rem 0;\r\n  }\r\n  &.h5 {\r\n    font-size: 1.7rem;\r\n    line-height: 1.55em;\r\n    margin: 1rem 0;\r\n  }\r\n  &.h6 {\r\n    font-size: 1.3rem;\r\n    line-height: 1.5em;\r\n    font-weight: 500;\r\n    margin: 1rem 0;\r\n  }\r\n  &.p {\r\n  \r\n      font-style: normal;\r\n      font-size: 1.6rem;\r\n      line-height:2.4rem;\r\n  }\r\n  &.lead{\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 1.4rem;\r\n    line-height:2.4rem;\r\n  }\r\n  &.bold {\r\n    font-family: ${({ family }) => family + \"-Bold\"};\r\n  }\r\n  &.size {\r\n    font-size: ${({ size }) => size} !important;\r\n  }\r\n  &.mg {\r\n    margin: ${({ mg }) => mg};\r\n  }\r\n  &.pd {\r\n    margin: ${({ pd }) => pd};\r\n  }\r\n  &.center{\r\n    text-align:center;\r\n  }\r\n`;\r\n\r\nconst Text = ({\r\n  children,\r\n  type = \"h3\",\r\n  className,\r\n  bold,\r\n  color,\r\n  size,\r\n  family = \"Avenir\",\r\n  mg,\r\n  pd,\r\n  layer,\r\n  transform = \"initial\",\r\n  center\r\n}) => {\r\n  const classes = classNames(\r\n    className,\r\n    bold && \"bold\",\r\n    size && \"size\",\r\n    center && \"center\",\r\n    type,\r\n    mg,\r\n    \"mg\",\r\n    pd,\r\n    \"pd\"\r\n  );\r\n  return (\r\n    <StyledText\r\n    layer={layer}\r\n      className={classes}\r\n      as={type}\r\n      family={family}\r\n      size={size}\r\n      mg={mg}\r\n      pd={pd}\r\n      color={color}\r\n      transform={transform}\r\n    >\r\n      {children}\r\n    </StyledText>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","/media/isalm/New Volume/web/code/project/front/client/src/elements/typography/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/assets/icons/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/components/divider/index.jsx",[],"/media/isalm/New Volume/web/code/project/front/client/src/components/blog/new.jsx",["148","149","150","151"],"/media/isalm/New Volume/web/code/project/front/client/src/components/blog/preview.jsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":21},{"ruleId":"156","severity":1,"message":"160","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":91,"column":7,"nodeType":"158","messageId":"159","endLine":91,"endColumn":11},{"ruleId":"156","severity":1,"message":"162","line":1,"column":35,"nodeType":"158","messageId":"159","endLine":1,"endColumn":46},{"ruleId":"156","severity":1,"message":"163","line":1,"column":43,"nodeType":"158","messageId":"159","endLine":1,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":198,"column":54,"nodeType":"166","messageId":"167","endLine":198,"endColumn":62},{"ruleId":"168","severity":1,"message":"169","line":108,"column":18,"nodeType":"170","endLine":108,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":112,"column":48,"nodeType":"170","endLine":112,"endColumn":83},{"ruleId":"168","severity":1,"message":"169","line":113,"column":41,"nodeType":"170","endLine":113,"endColumn":76},{"ruleId":"168","severity":1,"message":"169","line":114,"column":58,"nodeType":"170","endLine":114,"endColumn":93},{"ruleId":"168","severity":1,"message":"169","line":115,"column":41,"nodeType":"170","endLine":115,"endColumn":76},{"ruleId":"168","severity":1,"message":"169","line":116,"column":41,"nodeType":"170","endLine":116,"endColumn":76},{"ruleId":"156","severity":1,"message":"171","line":5,"column":19,"nodeType":"158","messageId":"159","endLine":5,"endColumn":32},{"ruleId":"156","severity":1,"message":"172","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":12},{"ruleId":"156","severity":1,"message":"173","line":62,"column":7,"nodeType":"158","messageId":"159","endLine":62,"endColumn":10},{"ruleId":"174","severity":1,"message":"175","line":79,"column":6,"nodeType":"176","endLine":79,"endColumn":8,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":94,"column":6,"nodeType":"176","endLine":94,"endColumn":15,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"180","line":4,"column":9,"nodeType":"158","messageId":"159","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"181","line":4,"column":17,"nodeType":"158","messageId":"159","endLine":4,"endColumn":25},{"ruleId":"156","severity":1,"message":"182","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"183","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":12},{"ruleId":"156","severity":1,"message":"171","line":4,"column":17,"nodeType":"158","messageId":"159","endLine":4,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":99,"column":1,"nodeType":"186","endLine":145,"endColumn":2},{"ruleId":"156","severity":1,"message":"187","line":100,"column":33,"nodeType":"158","messageId":"159","endLine":100,"endColumn":39},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'useDarkMode' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Main' is assigned a value but never used.","'useCallback' is defined but never used.","'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'iconSize'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SubmitHandler' is defined but never used.","'code' is defined but never used.","'Img' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchedIcons'. Either include it or remove the dependency array. You can also do a functional update 'setSearchedIcons(s => ...)' if you only need 'searchedIcons' in the 'setSearchedIcons' call.","ArrayExpression",["190"],"React Hook useEffect has a missing dependency: 'icons'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearchedIcons' needs the current value of 'icons'.",["191"],"'useEffect' is defined but never used.","'Activity' is defined but never used.","'motion' is defined but never used.","'Text' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [searchedIcons]",{"range":"196","text":"197"},"Update the dependencies array to be: [icons, keyword]",{"range":"198","text":"199"},[2046,2048],"[searchedIcons]",[2432,2441],"[icons, keyword]"]